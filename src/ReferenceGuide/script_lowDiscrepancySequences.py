from openturns import *

size = 300

sampleSobol = SobolSequence(2).generate(size)
graphSobol = Graph("Sobol", "", "", True, "")
cSobol = Cloud(sampleSobol)
cSobol.setColor("black")
cSobol.setPointStyle("bullet")
graphSobol.add(cSobol)
graphSobol.draw("sobol_cloud", 600, 600, GraphImplementation.PDF)
graphSobol.draw("sobol_cloud", 600, 600, GraphImplementation.PNG)

sampleFaure = FaureSequence(2).generate(size)
graphFaure = Graph("Faure", "", "", True, "")
cFaure = Cloud(sampleFaure)
cFaure.setColor("black")
cFaure.setPointStyle("bullet")
graphFaure.add(cFaure)
graphFaure.draw("faure_cloud", 600, 600, GraphImplementation.PDF)
graphFaure.draw("faure_cloud", 600, 600, GraphImplementation.PNG)

sampleHalton = HaltonSequence(2).generate(size)
graphHalton = Graph("Halton", "", "", True, "")
cHalton = Cloud(sampleHalton)
cHalton.setColor("black")
cHalton.setPointStyle("bullet")
graphHalton.add(cHalton)
graphHalton.draw("halton_cloud", 600, 600, GraphImplementation.PDF)
graphHalton.draw("halton_cloud", 600, 600, GraphImplementation.PNG)

sampleReverseHalton = ReverseHaltonSequence(2).generate(size)
graphReverseHalton = Graph("Reverse Halton", "", "", True, "")
cReverseHalton = Cloud(sampleReverseHalton)
cReverseHalton.setColor("black")
cReverseHalton.setPointStyle("bullet")
graphReverseHalton.add(cReverseHalton)
graphReverseHalton.draw("reverseHalton_cloud", 600, 600, GraphImplementation.PDF)
graphReverseHalton.draw("reverseHalton_cloud", 600, 600, GraphImplementation.PNG)

sampleHaselgrove = HaselgroveSequence(2).generate(size)
graphHaselgrove = Graph("Haselgrove", "", "", True, "")
cHaselgrove = Cloud(sampleHaselgrove)
cHaselgrove.setColor("black")
cHaselgrove.setPointStyle("bullet")
graphHaselgrove.add(cHaselgrove)
graphHaselgrove.draw("haselgrove_cloud", 600, 600, GraphImplementation.PDF)
graphHaselgrove.draw("haselgrove_cloud", 600, 600, GraphImplementation.PNG)

sample1 = Uniform(0.0, 1.0).getNumericalSample(size)
sample2 = Uniform(0.0, 1.0).getNumericalSample(size)
graphMersenne = Graph("Mersenne Twister", "", "", True, "")
cMersenne = Cloud(sample1, sample2)
cMersenne.setColor("black")
cMersenne.setPointStyle("bullet")
graphMersenne.add(cMersenne)
graphMersenne.draw("mersenne_twister_cloud", 600, 600, GraphImplementation.PDF)
graphMersenne.draw("mersenne_twister_cloud", 600, 600, GraphImplementation.PNG)
